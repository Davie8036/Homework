#include <iostream>
#include <cstdlib>
#include <fcntl.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <unistd.h>
#include <cstring>

bool is_prime(int *array, int size, int number) {
    // Implementation for checking if the number is prime
    // (You should complete the implementation based on your requirements.)
}

int main(int argc, char *argv[]) {
    const char *shared_memory_name = "/my_shared_memory";
    const int SIZE = 1000 * sizeof(int);

    if (argc != 2) {
        std::cerr << argv[0] << " <check>" << std::endl;
        return EXIT_FAILURE;
    }

    int number = std::atoi(argv[1]);

    int shm_fd = shm_open(shared_memory_name, O_RDWR, 0666);
    if (shm_fd == -1) {
        perror("404");
        exit(EXIT_FAILURE);
    }

    int *array = static_cast<int *>(mmap(0, SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, shm_fd, 0));
    if (array == MAP_FAILED) {
        perror("404");
        exit(EXIT_FAILURE);
    }

    bool is_num_prime = is_prime(array, SIZE / sizeof(int), number);
    if (is_num_prime) {
        std::cout << number << " is prime" << std::endl;
    } else {
        std::cout << number << " is not prime" << std::endl;
    }

    if (munmap(array, SIZE) == -1) {
        perror("404");
        exit(EXIT_FAILURE);
    }

    if (close(shm_fd) == -1) {
        perror("Error closing shared memory");
        exit(EXIT_FAILURE);
    }

    return 0;
}
